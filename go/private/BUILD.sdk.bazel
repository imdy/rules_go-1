load("@io_bazel_rules_go//go/private:go_root.bzl", "go_root")

package(default_visibility = [ "//visibility:public" ])

go_root(
  name = "root",
  path = "{goroot}",
)

filegroup(
  name = "go",
  srcs = [ "bin/go" ],
)

filegroup(
  name = "tools",
  srcs = [":go"] + glob(["pkg/tool/**"]),
)

cc_library(
  name = "headers",
  hdrs = glob(["pkg/include/*.h"]),
)

filegroup(
  name = "stdlib_darwin_amd64",
  srcs = glob([
    "src/**",
    "pkg/darwin_amd64/**",
  ]),
)

filegroup(
  name = "stdlib_linux_386",
  srcs = glob([
    "src/**",
    "pkg/linux_386/**",
  ]),
)

filegroup(
  name = "stdlib_linux_amd64",
  srcs = glob([
    "src/**",
    "pkg/linux_amd64/**",
  ]),
)

filegroup(
  name = "stdlib_linux_armv6l",
  srcs = glob([
    "src/**",
    "pkg/linux_armv6l/**",
  ]),
)

filegroup(
  name = "stdlib_windows_386",
  srcs = glob([
    "src/**",
    "pkg/windows_386/**",
  ]),
)

filegroup(
  name = "stdlib_windows_amd64",
  srcs = glob([
    "src/**",
    "pkg/windows_amd64/**",
  ]),
)

filegroup(
  name = "stdlib_freebsd_386",
  srcs = glob([
    "src/**",
    "pkg/freebsd_386/**",
  ]),
)

filegroup(
  name = "stdlib_freebsd_amd64",
  srcs = glob([
    "src/**",
    "pkg/freebsd_amd64/**",
  ]),
)

filegroup(
  name = "stdlib_linux_ppc64le",
  srcs = glob([
    "src/**",
    "pkg/linux_ppc64le/**",
  ]),
)

filegroup(
  name = "stdlib_linux_s390x",
  srcs = glob([
    "src/**",
    "pkg/linux_s390x/**",
  ]),
)

